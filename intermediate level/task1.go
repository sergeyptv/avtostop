package main

import (
	"fmt"
)

// time.Sleep использовать нельзя. это будет не валидным ответом на собеседовании
// 1. Как будет работать код?
// Создаются 3 канала, далее - 3 горутины, затем - select, который будет ожидать выполнение одной из горутин. Выполнится
// именно 3 горутина, потому что в го выполняется первой последняя созданная горутина.
//
// 2. Как сделать так, чтобы выводился только первый ch?
// 2.1 Удалять из существующего кода ничего нельзя. Только добавлять)
// Можно добавить runtime.Gosched() после создания первой горутины и т.к. горутин всего две, то функция runtime.Gosched()
// переключит выполнение на только что созданную горутину.
func main() {
	ch := make(chan bool)
	ch2 := make(chan bool)
	ch3 := make(chan bool)
	go func() {
		ch <- true
	}()
	// runtime.Gosched()
	go func() {
		ch2 <- true
	}()
	go func() {
		ch3 <- true
	}()

	select {
	case <-ch:
		fmt.Printf("val from ch")
	case <-ch2:
		fmt.Printf("val from ch2")
	case <-ch3:
		fmt.Printf("val from ch3")
	}
}
